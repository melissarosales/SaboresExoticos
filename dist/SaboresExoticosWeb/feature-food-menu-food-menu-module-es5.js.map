{"version":3,"sources":["webpack:///src/app/feature/food-menu/food-menu.component.ts","webpack:///src/app/feature/food-menu/food-menu.component.html","webpack:///src/app/feature/food-menu/food-menu.module.ts","webpack:///src/app/shared/service/food.service.ts","webpack:///src/app/shared/service/foodCategory.service.ts"],"names":["FoodMenuComponent","foodCategoryService","foodService","unsubscribe$","getCategoryFoodList","_foodCategoryList","pipe","subscribe","response","foodCategoryList","getFoodList","_foodList","foodList","filterFoodList","Id","fkFoodCategory","filteredFoodList","filter","x","FkFoodCategory","console","log","selector","templateUrl","styleUrls","routes","path","component","FoodMenuModule","forChild","declarations","imports","methodFoodyList","httpOptions","headers","FoodService","http","model","post","apiURL","providedIn","methodFoodCategoryList","FoodCategoryService"],"mappings":"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","file":"feature-food-menu-food-menu-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodCategoryService } from '@shared/services/foodCategory.service';\nimport { FoodService } from '@shared/services/food.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FoodCategoryModel } from '@app/model/foodCategory.model';\nimport { FoodModel } from '@app/model/food.model';\n\n@Component({\n  selector: 'app-food-menu',\n  templateUrl: './food-menu.component.html',\n  styleUrls: ['./food-menu.component.scss']\n})\nexport class FoodMenuComponent implements OnInit {\nfoodCategoryList:FoodCategoryModel[];\nfoodList:FoodModel[];\nfilteredFoodList:FoodModel[];\n  private unsubscribe$ = new Subject<void>();\n  constructor(private foodCategoryService:FoodCategoryService,private foodService:FoodService, ) { }\n\n  ngOnInit(): void {\n    this.getCategoryFoodList();\n  }\n\n  \n  getCategoryFoodList() { \n      this.foodCategoryService._foodCategoryList(null)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          response => {\n            this.foodCategoryList=response;\n            this.getFoodList();\n          },\n        ); \n  }\n  \n  getFoodList() { \n      this.foodService._foodList(null)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          response => {\n            this.foodList=response;\n            this.filterFoodList(this.foodCategoryList[0].Id);\n          },\n        ); \n  }\n\n\n  filterFoodList(fkFoodCategory){\n    this.filteredFoodList=[];\n    this.filteredFoodList=this.foodList.filter(x => x.FkFoodCategory == fkFoodCategory)\n    console.log( this.filteredFoodList)\n  }\n\n}\n","<section class=\"wrapper\">\n    <section class=\"container\" style=\"margin-bottom: 20rem;\">\n        <br>\n        <h3>Nuestro menú</h3>\n        <section class=\"row\">\n            <section class=\"col-md-6\">\n                <section class=\"card card-body  mt-5\" style=\"box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);border-radius: 5px; height: 26.7rem; overflow: auto;\">\n                    <section class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n                        <a *ngFor=\"let entry of foodCategoryList\" (click)=\"filterFoodList(entry.Id)\" class=\"list-group-item list-group-item-action span-menu-group-food\" id=\"entry.Id\" data-toggle=\"list\" href=\"#entry.Id\" role=\"tab\" aria-controls=\"entry.Name\">{{entry.Name}}</a>\n                    </section>\n                </section>\n            </section>\n            <section class=\"col-md-6\">\n                <section class=\"card card-body  mt-5\" style=\"box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);border-radius: 5px; height: 26.7rem; overflow: auto;\">\n                    <section class=\"tab-content\" id=\"nav-tabContent\">\n                        <section class=\"tab-pane fade show active\" id=\"list-breakfast\" role=\"tabpanel\" aria-labelledby=\"list-breakfast-list\">\n\n                            <section *ngFor=\"let entry of filteredFoodList\" class=\"row ml-1 mb-1\">\n                                <section class=\"col-md-9\">\n                                    <h5>{{entry.Name}}</h5>\n                                </section>\n                                <section class=\"col-md-3\">\n                                    <h5>₡{{entry.Price}}</h5>\n                                </section>\n                                <section class=\"col-md-9\">\n                                    <p>{{entry.Description}}</p>\n                                </section>\n                            </section>\n                        </section>\n                    </section>\n                </section>\n            </section>\n        </section>\n\n\n\n    </section>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FoodMenuComponent } from './food-menu.component'; \nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nconst routes: Routes = [{ path: '', component: FoodMenuComponent }];\n@NgModule({\n  declarations: [FoodMenuComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n  ]\n})\nexport class FoodMenuModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { utiles } from '@env/utiles';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '@env/environment';\r\n\r\nconst methodFoodyList = 'api/Food/List';\r\n\r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FoodService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n \r\n\r\n  _foodList(model: any) {  \r\n    return this.http.post<any>(environment.apiURL+ methodFoodyList, model, httpOptions)\r\n      .pipe(map(response => {\r\n        return response;\r\n      }));\r\n  }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { utiles } from '@env/utiles';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '@env/environment';\r\n\r\nconst methodFoodCategoryList = 'api/FoodCategory/List';\r\n\r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FoodCategoryService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n \r\n\r\n  _foodCategoryList(model: any) {  \r\n    return this.http.post<any>(environment.apiURL+ methodFoodCategoryList, model, httpOptions)\r\n      .pipe(map(response => {\r\n        return response;\r\n      }));\r\n  }\r\n\r\n\r\n}"]}