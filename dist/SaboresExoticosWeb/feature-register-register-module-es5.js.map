{"version":3,"sources":["webpack:///src/app/feature/register/register.component.ts","webpack:///src/app/feature/register/register.component.html","webpack:///src/app/feature/register/register.module.ts"],"names":["RegisterComponent","form","matDialog","_commonService","_router","userService","submitted","registerForm","group","name","compose","required","lastName","identity","phone","password","email","valid","control","controls","hasError","register","selector","templateUrl","styleUrls","routes","path","component","RegisterModule","forChild","declarations","imports"],"mappings":"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","file":"feature-register-register-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommonService } from '@shared/services/common-service.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '@shared/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n \n  constructor(private form: FormBuilder,\n    private matDialog: MatDialog,\n    private _commonService: CommonService, \n    private _router: Router,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.form.group({\n      name: [\"\", Validators.compose([Validators.required])],\n      lastName: [\"\", Validators.compose([Validators.required])],\n      identity: [\"\", Validators.compose([Validators.required])],\n      phone: [\"\", Validators.compose([Validators.required])],\n      password: [\"\", Validators.compose([Validators.required])],\n      email: [\"\", Validators.compose([Validators.required, Validators.email])],\n    });\n  }\n  register(){\n    if (!this.registerForm.valid) {\n      this.submitted = true;\n    } else { \n      this.submitted = false;\n    }\n  }\n  getErrorMessage(control) {\n    switch (control) {\n      case 'name': {\n        return this.registerForm.controls.name.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      } \n      case 'email': {\n        return this.registerForm.controls.email.hasError('required') ? 'Campo requerido.' :\n          this.registerForm.controls.email.hasError('email') ? 'No es un correo valido.' : '';\n        break;\n      } \n      case 'lastName': {\n        return this.registerForm.controls.lastName.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      } \n      case 'identity': {\n        return this.registerForm.controls.identity.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      } \n      case 'phone': {\n        return this.registerForm.controls.phone.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      } \n      case 'password': {\n        return this.registerForm.controls.password.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n    }\n  }\n\n}\n","<section class=\"wrapper\">\n    <section class=\"container\">\n\n        <br>\n        <h3>Registro</h3>\n        <section class=\"card col-md-6 mr-auto ml-auto\">\n            <form [formGroup]=\"registerForm\" novalidate>\n                <section class=\"card-body\">\n                    <section class=\"form-group row\">\n                        <label for=\"name\" class=\"col-sm-3 col-form-label\">Nombre</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"name\" id=\"name\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('name').errors\">\n                                {{getErrorMessage('name')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"lastName\" class=\"col-sm-3 col-form-label\">Apellido</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"lastName\" id=\"lastName\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('lastName').errors\">\n                                {{getErrorMessage('lastName')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"identity\" class=\"col-sm-3 col-form-label\">Cédula</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"identity\" id=\"identity\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('identity').errors\">\n                                {{getErrorMessage('identity')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"phone\" class=\"col-sm-3 col-form-label\">Teléfono</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"phone\" id=\"phone\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('phone').errors\">\n                                {{getErrorMessage('phone')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"email\" class=\"col-sm-3 col-form-label\">Correo</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"email\" type=\"email\" id=\"email\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('email').errors\">\n                                {{getErrorMessage('email')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"password\" class=\"col-sm-3 col-form-label\">Contraseña</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"password\" id=\"password\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('password').errors\">\n                                {{getErrorMessage('password')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"d-flex justify-content-center\">\n                        <button type=\"submit\" (click)=\"register()\" class=\"btn btn-primary\">Registrarme</button>\n                    </section>\n                </section>\n            </form>\n        </section>\n    </section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nconst routes: Routes = [{ path: '', component: RegisterComponent }];\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n  ]\n})\nexport class RegisterModule { }\n"]}