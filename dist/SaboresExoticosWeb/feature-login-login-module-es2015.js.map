{"version":3,"sources":["./src/app/feature/login/login.component.ts","./src/app/feature/login/login.component.html","./src/app/feature/login/login.module.ts","./src/app/model/login.Model.ts"],"names":[],"mappings":"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","file":"feature-login-login-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalConfirmComponent } from '@shared/modal/modal-confirm/modal-confirm.component';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthenticationService } from '@core/service/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginModel } from '@app/model/login.Model';\r\nimport { CommonService } from '@shared/services/common-service.service';\r\nimport { DataMessageModel } from '@app/model/dataMessage.model';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { utiles } from '@env/utiles';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  //#region variables\r\n  private unsubscribe$ = new Subject<void>();\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  hide = true;\r\n  loginModel: LoginModel = new LoginModel();\r\n  //#endregion variables\r\n\r\n  constructor(private form: FormBuilder,\r\n    private matDialog: MatDialog,\r\n    private _commonService: CommonService, \r\n    private _router: Router,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.form.group({\r\n      Password: [\"\", Validators.compose([Validators.required])],\r\n      Email: [\"\", Validators.compose([Validators.required, Validators.email])]\r\n    });\r\n  }\r\n  goToRegister() {\r\n    this._router.navigate(['register']);\r\n  }\r\n\r\n\r\n  login() {\r\n    if (!this.loginForm.valid) {\r\n      this.submitted = true;\r\n    } else {\r\n      this.setUserModel();\r\n      this.submitted = false;\r\n\r\n      this.userService._loginUser(this.loginModel)\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(\r\n          responseLogin => {\r\n            if (responseLogin !== null) { \r\n              this.loginModel = responseLogin;\r\n              this._commonService.asignMenu(JSON.stringify(this.loginModel.MenuOptions));\r\n              utiles.createCacheUser(this.loginModel);\r\n              this._router.navigate(['dashboard']);\r\n            } else {\r\n              this.opendialogAlert('Usuario o contrasena incorrectos');\r\n            }\r\n          },\r\n        );\r\n    }\r\n  }\r\n\r\n  getErrorMessage(control) {\r\n    switch (control) {\r\n      case 'Password': {\r\n        return this.loginForm.controls.Password.hasError('required') ? 'Campo requerido.' : '';\r\n        break;\r\n      }\r\n      case 'Email': {\r\n        return this.loginForm.controls.Email.hasError('required') ? 'Campo requerido.' :\r\n          this.loginForm.controls.Email.hasError('email') ? 'No es un correo valido.' : '';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  setUserModel() {\r\n    this.loginModel.Email = this.loginForm.get('Email').value;\r\n    this.loginModel.Password = this.loginForm.get('Password').value;\r\n  }\r\n  opendialogAlert(args): void {\r\n    this._commonService._setLoading(false);\r\n    // this.closeDocumentModal();\r\n    let data = new DataMessageModel();\r\n    data.labelTitile = 'Error';\r\n    data.textDescription = args;\r\n    data.status = 'info';\r\n    data.button = true;\r\n    data.error = args;\r\n    this._commonService._setLoading(false);\r\n    this._commonService.onErrorModal(data);\r\n  }\r\n\r\n}\r\n","<section class=\"wrapper\">\r\n    <section class=\"container\">\r\n        <br>\r\n        <h3>Ingreso</h3>\r\n        <section class=\"card col-md-6 mr-auto ml-auto\">\r\n            <form [formGroup]=\"loginForm\" novalidate>\r\n                <section class=\"card-body\">\r\n                    <section class=\"form-group row\">\r\n                        <label for=\"email\" class=\"col-sm-3 col-form-label\">Correo</label>\r\n                        <section class=\"col-sm-9\">\r\n                            <input class=\"form-control\" type=\"email\" formControlName=\"Email\" id=\"email\">\r\n                            <!-- estilo para input error is-invalid -->\r\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && loginForm.get('Email').errors\">\r\n                                {{getErrorMessage('Email')}}\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n                    <section class=\"form-group row\">\r\n                        <label for=\"password\" class=\"col-sm-3 col-form-label\">Contrase√±a</label>\r\n                        <section class=\"col-sm-9\">\r\n                            <input class=\"form-control\" type=\"password\" formControlName=\"Password\" id=\"password\">\r\n                            <!-- estilo para input error is-invalid -->\r\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && loginForm.get('Password').errors\">\r\n                                {{getErrorMessage('Password')}}\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n                    <section class=\"d-flex justify-content-center mb-3\">\r\n                        <a>¬øA√∫n no tienes una cuenta?&nbsp;</a>\r\n                        <a class=\"register-a\" (click)=\"goToRegister()\">Reg√≠strate</a>\r\n                    </section>\r\n                    <section class=\"d-flex justify-content-center\">\r\n                        <button type=\"submit\" (click)=\"login()\" class=\"btn btn-primary\">Ingresar</button>\r\n                    </section>\r\n                </section>\r\n            </form>\r\n        </section>\r\n    </section>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nconst routes: Routes = [{ path: '', component: LoginComponent }];\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { MenuOptionsModel } from './menuOptions.model';\r\n\r\nexport class LoginModel {\r\n  Password: string;\r\n  Email: string;\r\n  NewPassword: string;\r\n  MenuOptions: [MenuOptionsModel];\r\n  constructor() {\r\n    this.Password = '';\r\n    this.Email = '';\r\n    this.NewPassword = \"\";\r\n    this.MenuOptions = null;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}