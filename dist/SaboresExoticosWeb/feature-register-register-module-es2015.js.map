{"version":3,"sources":["./src/app/feature/register/register.component.ts","./src/app/feature/register/register.component.html","./src/app/feature/register/register.module.ts"],"names":[],"mappings":"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","file":"feature-register-register-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommonService } from '@shared/services/common-service.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '@shared/services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n \n  constructor(private form: FormBuilder,\n    private matDialog: MatDialog,\n    private _commonService: CommonService, \n    private _router: Router,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.form.group({\n      name: [\"\", Validators.compose([Validators.required])],\n      lastName: [\"\", Validators.compose([Validators.required])],\n      identity: [\"\", Validators.compose([Validators.required])],\n      phone: [\"\", Validators.compose([Validators.required])],\n      password: [\"\", Validators.compose([Validators.required])],\n      email: [\"\", Validators.compose([Validators.required, Validators.email])],\n    });\n  }\n  register(){\n    if (!this.registerForm.valid) {\n      this.submitted = true;\n    } else { \n      this.submitted = false;\n    }\n  }\n  getErrorMessage(control) {\n    switch (control) {\n      case 'name': {\n        return this.registerForm.controls.name.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      } \n      case 'email': {\n        return this.registerForm.controls.email.hasError('required') ? 'Campo requerido.' :\n          this.registerForm.controls.email.hasError('email') ? 'No es un correo valido.' : '';\n        break;\n      } \n      case 'lastName': {\n        return this.registerForm.controls.lastName.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      } \n      case 'identity': {\n        return this.registerForm.controls.identity.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      } \n      case 'phone': {\n        return this.registerForm.controls.phone.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      } \n      case 'password': {\n        return this.registerForm.controls.password.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n    }\n  }\n\n}\n","<section class=\"wrapper\">\n    <section class=\"container\">\n\n        <br>\n        <h3>Registro</h3>\n        <section class=\"card col-md-6 mr-auto ml-auto\">\n            <form [formGroup]=\"registerForm\" novalidate>\n                <section class=\"card-body\">\n                    <section class=\"form-group row\">\n                        <label for=\"name\" class=\"col-sm-3 col-form-label\">Nombre</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"name\" id=\"name\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('name').errors\">\n                                {{getErrorMessage('name')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"lastName\" class=\"col-sm-3 col-form-label\">Apellido</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"lastName\" id=\"lastName\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('lastName').errors\">\n                                {{getErrorMessage('lastName')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"identity\" class=\"col-sm-3 col-form-label\">Cédula</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"identity\" id=\"identity\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('identity').errors\">\n                                {{getErrorMessage('identity')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"phone\" class=\"col-sm-3 col-form-label\">Teléfono</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"phone\" id=\"phone\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('phone').errors\">\n                                {{getErrorMessage('phone')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"email\" class=\"col-sm-3 col-form-label\">Correo</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"email\" type=\"email\" id=\"email\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('email').errors\">\n                                {{getErrorMessage('email')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"form-group row\">\n                        <label for=\"password\" class=\"col-sm-3 col-form-label\">Contraseña</label>\n                        <section class=\"col-sm-9\">\n                            <input class=\"form-control\" formControlName=\"password\" id=\"password\">\n                            <!-- estilo para input error is-invalid -->\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && registerForm.get('password').errors\">\n                                {{getErrorMessage('password')}}\n                            </div>\n                        </section>\n                    </section>\n                    <section class=\"d-flex justify-content-center\">\n                        <button type=\"submit\" (click)=\"register()\" class=\"btn btn-primary\">Registrarme</button>\n                    </section>\n                </section>\n            </form>\n        </section>\n    </section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterComponent } from './register.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nconst routes: Routes = [{ path: '', component: RegisterComponent }];\n\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n  ]\n})\nexport class RegisterModule { }\n"],"sourceRoot":"webpack:///"}