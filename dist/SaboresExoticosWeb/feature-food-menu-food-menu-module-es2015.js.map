{"version":3,"sources":["./src/app/feature/food-menu/food-menu.component.ts","./src/app/feature/food-menu/food-menu.component.html","./src/app/feature/food-menu/food-menu.module.ts","./src/app/shared/service/food.service.ts","./src/app/shared/service/foodCategory.service.ts"],"names":[],"mappings":"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","file":"feature-food-menu-food-menu-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodCategoryService } from '@shared/services/foodCategory.service';\nimport { FoodService } from '@shared/services/food.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FoodCategoryModel } from '@app/model/foodCategory.model';\nimport { FoodModel } from '@app/model/food.model';\n\n@Component({\n  selector: 'app-food-menu',\n  templateUrl: './food-menu.component.html',\n  styleUrls: ['./food-menu.component.scss']\n})\nexport class FoodMenuComponent implements OnInit {\nfoodCategoryList:FoodCategoryModel[];\nfoodList:FoodModel[];\nfilteredFoodList:FoodModel[];\n  private unsubscribe$ = new Subject<void>();\n  constructor(private foodCategoryService:FoodCategoryService,private foodService:FoodService, ) { }\n\n  ngOnInit(): void {\n    this.getCategoryFoodList();\n  }\n\n  \n  getCategoryFoodList() { \n      this.foodCategoryService._foodCategoryList(null)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          response => {\n            this.foodCategoryList=response;\n            this.getFoodList();\n          },\n        ); \n  }\n  \n  getFoodList() { \n      this.foodService._foodList(null)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          response => {\n            this.foodList=response;\n            this.filterFoodList(this.foodCategoryList[0].Id);\n          },\n        ); \n  }\n\n\n  filterFoodList(fkFoodCategory){\n    this.filteredFoodList=[];\n    this.filteredFoodList=this.foodList.filter(x => x.FkFoodCategory == fkFoodCategory)\n    console.log( this.filteredFoodList)\n  }\n\n}\n","<section class=\"wrapper\">\n    <section class=\"container\" style=\"margin-bottom: 20rem;\">\n        <br>\n        <h3>Nuestro menú</h3>\n        <section class=\"row\">\n            <section class=\"col-md-6\">\n                <section class=\"card card-body  mt-5\" style=\"box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);border-radius: 5px; height: 26.7rem; overflow: auto;\">\n                    <section class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n                        <a *ngFor=\"let entry of foodCategoryList\" (click)=\"filterFoodList(entry.Id)\" class=\"list-group-item list-group-item-action span-menu-group-food\" id=\"entry.Id\" data-toggle=\"list\" href=\"#entry.Id\" role=\"tab\" aria-controls=\"entry.Name\">{{entry.Name}}</a>\n                    </section>\n                </section>\n            </section>\n            <section class=\"col-md-6\">\n                <section class=\"card card-body  mt-5\" style=\"box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);border-radius: 5px; height: 26.7rem; overflow: auto;\">\n                    <section class=\"tab-content\" id=\"nav-tabContent\">\n                        <section class=\"tab-pane fade show active\" id=\"list-breakfast\" role=\"tabpanel\" aria-labelledby=\"list-breakfast-list\">\n\n                            <section *ngFor=\"let entry of filteredFoodList\" class=\"row ml-1 mb-1\">\n                                <section class=\"col-md-9\">\n                                    <h5>{{entry.Name}}</h5>\n                                </section>\n                                <section class=\"col-md-3\">\n                                    <h5>₡{{entry.Price}}</h5>\n                                </section>\n                                <section class=\"col-md-9\">\n                                    <p>{{entry.Description}}</p>\n                                </section>\n                            </section>\n                        </section>\n                    </section>\n                </section>\n            </section>\n        </section>\n\n\n\n    </section>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FoodMenuComponent } from './food-menu.component'; \nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nconst routes: Routes = [{ path: '', component: FoodMenuComponent }];\n@NgModule({\n  declarations: [FoodMenuComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n  ]\n})\nexport class FoodMenuModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { utiles } from '@env/utiles';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '@env/environment';\r\n\r\nconst methodFoodyList = 'api/Food/List';\r\n\r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FoodService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n \r\n\r\n  _foodList(model: any) {  \r\n    return this.http.post<any>(environment.apiURL+ methodFoodyList, model, httpOptions)\r\n      .pipe(map(response => {\r\n        return response;\r\n      }));\r\n  }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { utiles } from '@env/utiles';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from '@env/environment';\r\n\r\nconst methodFoodCategoryList = 'api/FoodCategory/List';\r\n\r\nconst httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FoodCategoryService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n \r\n\r\n  _foodCategoryList(model: any) {  \r\n    return this.http.post<any>(environment.apiURL+ methodFoodCategoryList, model, httpOptions)\r\n      .pipe(map(response => {\r\n        return response;\r\n      }));\r\n  }\r\n\r\n\r\n}"],"sourceRoot":"webpack:///"}