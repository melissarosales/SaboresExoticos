{"version":3,"sources":["webpack:///src/app/feature/book/book.component.ts","webpack:///src/app/feature/book/book.component.html","webpack:///src/app/feature/book/book.module.ts"],"names":["BookComponent","form","matDialog","_commonService","_router","submitted","bookForm","group","restaurant","compose","required","typeReservation","tableUbication","date","hour","personQuantity","tableQuantity","name","phone","email","details","cardNumber","ccv","expirationDate","control","controls","hasError","valid","book","selector","templateUrl","styleUrls","routes","path","component","BookModule","forChild","declarations","imports"],"mappings":"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","file":"feature-book-book-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CommonService } from '@shared/services/common-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.scss']\n})\nexport class BookComponent implements OnInit {\n\n  bookForm: FormGroup;\n  submitted = false;\n  constructor( private form: FormBuilder, \n    private matDialog: MatDialog,\n    private _commonService: CommonService,  \n    private _router: Router,) { }\n\n  ngOnInit(): void {\n    this.bookForm = this.form.group({\n      restaurant: [\"\", Validators.compose([Validators.required])],\n      typeReservation: [\"\", Validators.compose([Validators.required])],\n      tableUbication: [\"\"],\n      date: [\"\", Validators.compose([Validators.required])],\n      hour: [\"\", Validators.compose([Validators.required])],\n      personQuantity: [\"\", Validators.compose([Validators.required])],\n      tableQuantity: [\"\", Validators.compose([Validators.required])],\n      name: [\"\", Validators.compose([Validators.required])],\n      phone: [\"\", Validators.compose([Validators.required])],\n      email: [\"\", Validators.compose([Validators.required])],\n      details: [\"\"],\n      cardNumber: [\"\", Validators.compose([Validators.required])],\n      ccv: [\"\", Validators.compose([Validators.required])],\n      expirationDate: [\"\", Validators.compose([Validators.required])],\n    });\n  }\n\n  getErrorMessage(control) {\n    switch (control) {\n      case 'restaurant': {\n        return this.bookForm.controls.restaurant.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'typeReservation': {\n        return this.bookForm.controls.typeReservation.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'tableUbication': {\n        return this.bookForm.controls.tableUbication.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'date': {\n        return this.bookForm.controls.date.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'hour': {\n        return this.bookForm.controls.hour.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'personQuantity': {\n        return this.bookForm.controls.personQuantity.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'tableQuantity': {\n        return this.bookForm.controls.tableQuantity.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'name': {\n        return this.bookForm.controls.name.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'phone': {\n        return this.bookForm.controls.phone.hasError('required') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'email': {\n        return this.bookForm.controls.email.hasError('required') ? 'Campo requerido.' :\n          this.bookForm.controls.email.hasError('email') ? 'No es un correo valido.' : '';\n        break;\n      }\n      case 'cardNumber': {\n        return this.bookForm.controls.cardNumber.hasError('cardNumber') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'ccv': {\n        return this.bookForm.controls.ccv.hasError('ccv') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'expirationDate': {\n        return this.bookForm.controls.expirationDate.hasError('expirationDate') ? 'Campo requerido.' : '';\n        break;\n      }\n      case 'restaurant': {\n        return this.bookForm.controls.restaurant.hasError('restaurant') ? 'Campo requerido.' : '';\n        break;\n      }\n    }\n  }\n\n  \n  book() {\n    if (!this.bookForm.valid) {\n      this.submitted = true;\n    } else { \n      this.submitted = false; \n    }\n  }\n}\n","<section class=\"wrapper\">\n    <section class=\"container\" style=\"margin-bottom: 23rem !important;\">\n        <br>\n        <h3>Reservar</h3>\n        <br>\n        <form [formGroup]=\"bookForm\" novalidate>\n            <section class=\"card-deck\">\n                <section class=\"card col-md-6\">\n                    <section class=\"card-body\">\n\n                        <section class=\"form-group row\">\n                            <label for=\"restaurants\" class=\"col-sm-3 col-form-label\">Restaurante</label>\n                            <section class=\"col-sm-9\">\n                                <select id=\"restaurants\" formControlName=\"restaurant\" class=\"custom-select\">\n                                <option>Restaurante 1</option>\n                                <option>Restaurante 2</option>\n                                <option>Restaurante 3</option>\n                            </select>\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('restaurant').errors\">\n                                    {{getErrorMessage('restaurant')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row\">\n                            <label for=\"typeReservation\" class=\"col-sm-3 col-form-label\">Tipo de reservación</label>\n                            <section class=\"col-sm-9\">\n                                <select id=\"typeReservation\" formControlName=\"typeReservation\" class=\"custom-select\">\n                                <option>Mesa</option>\n                                <option>Restaurante</option>\n                                <option>Evento</option>\n                            </select>\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('typeReservation').errors\">\n                                    {{getErrorMessage('typeReservation')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row\">\n                            <label for=\"tableUbication\" class=\" col-sm-3 col-form-label \">Ubicación de la mesa</label>\n                            <section class=\"col-sm-9 \">\n                                <select id=\"tableUbication \" formControlName=\"tableUbication\" class=\"custom-select \">\n                                <option>Balcón</option>\n                                <option>Terraza</option>\n                                <option>Jardín</option>\n                            </select>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"date \" class=\"col-sm-3 col-form-label \">Fecha</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"date\" id=\"date \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('date').errors\">\n                                    {{getErrorMessage('date')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"hour \" class=\"col-sm-3 col-form-label \">Hora</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"hour\" id=\"hour \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('hour').errors\">\n                                    {{getErrorMessage('hour')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"personQuantity \" class=\"col-sm-3 col-form-label \">Cantidad de personas</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"personQuantity\" id=\"personQuantity \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('personQuantity').errors\">\n                                    {{getErrorMessage('personQuantity')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"tableQuantity \" class=\"col-sm-3 col-form-label \">Cantidad de mesas</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"tableQuantity\" id=\"tableQuantity \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('tableQuantity').errors\">\n                                    {{getErrorMessage('tableQuantity')}}\n                                </div>\n                            </section>\n                        </section>\n\n                    </section>\n                </section>\n                <section class=\"card col-md-6 \">\n                    <section class=\"card-body \">\n\n                        <section class=\"form-group row \">\n                            <label for=\"name \" class=\"col-sm-3 col-form-label \">Nombre</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"name\" id=\"name \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('name').errors\">\n                                    {{getErrorMessage('name')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"phone \" class=\"col-sm-3 col-form-label \">Teléfono</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"phone\" id=\"phone \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('phone').errors\">\n                                    {{getErrorMessage('phone')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"email \" class=\"col-sm-3 col-form-label \">Correo</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"email\" id=\"email \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('email').errors\">\n                                    {{getErrorMessage('email')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"details \" class=\"col-sm-3 col-form-label \">Detalles de reserva</label>\n                            <section class=\"col-sm-9 \">\n                                <textarea id=\"details \" formControlName=\"details\" class=\"form-control \"></textarea>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"cardNumber \" class=\"col-sm-3 col-form-label \">N. de Tarjeta</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"cardNumber\" id=\"cardNumber \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('cardNumber').errors\">\n                                    {{getErrorMessage('cardNumber')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"ccv \" class=\"col-sm-3 col-form-label \">CCV</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"ccv\" id=\"ccv \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('ccv').errors\">\n                                    {{getErrorMessage('ccv')}}\n                                </div>\n                            </section>\n                        </section>\n\n                        <section class=\"form-group row \">\n                            <label for=\"email \" class=\"col-sm-3 col-form-label \">Fecha vencimiento</label>\n                            <section class=\"col-sm-9 \">\n                                <input class=\"form-control \" formControlName=\"expirationDate\" value=\"02/24 \" id=\"expirationDate \">\n                                <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && bookForm.get('expirationDate').errors\">\n                                    {{getErrorMessage('expirationDate')}}\n                                </div>\n                            </section>\n                        </section>\n                    </section>\n                </section>\n            </section>\n            <section class=\"d-flex justify-content-center \">\n                <button type=\"submit \" (click)=\"book()\" class=\"btn btn-primary \">Confirmar</button>\n            </section>\n        </form>\n\n    </section>\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common'; \nimport { BookComponent } from './book.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\nconst routes: Routes = [{ path: '', component: BookComponent }];\n @NgModule({\n  declarations: [BookComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n  ]\n})\nexport class BookModule { }\n"]}