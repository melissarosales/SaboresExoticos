{"version":3,"sources":["webpack:///src/app/feature/login/login.component.ts","webpack:///src/app/feature/login/login.component.html","webpack:///src/app/feature/login/login.module.ts","webpack:///src/app/model/login.Model.ts"],"names":["LoginComponent","form","matDialog","_commonService","_router","userService","unsubscribe$","submitted","hide","loginModel","loginForm","group","Password","compose","required","Email","email","navigate","valid","setUserModel","_loginUser","pipe","subscribe","responseLogin","asignMenu","JSON","stringify","MenuOptions","createCacheUser","opendialogAlert","control","controls","hasError","get","value","args","_setLoading","data","labelTitile","textDescription","status","button","error","onErrorModal","goToRegister","login","selector","templateUrl","styleUrls","routes","path","component","LoginModule","forChild","declarations","imports","LoginModel","NewPassword"],"mappings":"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","file":"feature-login-login-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalConfirmComponent } from '@shared/modal/modal-confirm/modal-confirm.component';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthenticationService } from '@core/service/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginModel } from '@app/model/login.Model';\r\nimport { CommonService } from '@shared/services/common-service.service';\r\nimport { DataMessageModel } from '@app/model/dataMessage.model';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { utiles } from '@env/utiles';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  //#region variables\r\n  private unsubscribe$ = new Subject<void>();\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  hide = true;\r\n  loginModel: LoginModel = new LoginModel();\r\n  //#endregion variables\r\n\r\n  constructor(private form: FormBuilder,\r\n    private matDialog: MatDialog,\r\n    private _commonService: CommonService, \r\n    private _router: Router,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.form.group({\r\n      Password: [\"\", Validators.compose([Validators.required])],\r\n      Email: [\"\", Validators.compose([Validators.required, Validators.email])]\r\n    });\r\n  }\r\n  goToRegister() {\r\n    this._router.navigate(['register']);\r\n  }\r\n\r\n\r\n  login() {\r\n    if (!this.loginForm.valid) {\r\n      this.submitted = true;\r\n    } else {\r\n      this.setUserModel();\r\n      this.submitted = false;\r\n\r\n      this.userService._loginUser(this.loginModel)\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(\r\n          responseLogin => {\r\n            if (responseLogin !== null) { \r\n              this.loginModel = responseLogin;\r\n              this._commonService.asignMenu(JSON.stringify(this.loginModel.MenuOptions));\r\n              utiles.createCacheUser(this.loginModel);\r\n              this._router.navigate(['dashboard']);\r\n            } else {\r\n              this.opendialogAlert('Usuario o contrasena incorrectos');\r\n            }\r\n          },\r\n        );\r\n    }\r\n  }\r\n\r\n  getErrorMessage(control) {\r\n    switch (control) {\r\n      case 'Password': {\r\n        return this.loginForm.controls.Password.hasError('required') ? 'Campo requerido.' : '';\r\n        break;\r\n      }\r\n      case 'Email': {\r\n        return this.loginForm.controls.Email.hasError('required') ? 'Campo requerido.' :\r\n          this.loginForm.controls.Email.hasError('email') ? 'No es un correo valido.' : '';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  setUserModel() {\r\n    this.loginModel.Email = this.loginForm.get('Email').value;\r\n    this.loginModel.Password = this.loginForm.get('Password').value;\r\n  }\r\n  opendialogAlert(args): void {\r\n    this._commonService._setLoading(false);\r\n    // this.closeDocumentModal();\r\n    let data = new DataMessageModel();\r\n    data.labelTitile = 'Error';\r\n    data.textDescription = args;\r\n    data.status = 'info';\r\n    data.button = true;\r\n    data.error = args;\r\n    this._commonService._setLoading(false);\r\n    this._commonService.onErrorModal(data);\r\n  }\r\n\r\n}\r\n","<section class=\"wrapper\">\r\n    <section class=\"container\">\r\n        <br>\r\n        <h3>Ingreso</h3>\r\n        <section class=\"card col-md-6 mr-auto ml-auto\">\r\n            <form [formGroup]=\"loginForm\" novalidate>\r\n                <section class=\"card-body\">\r\n                    <section class=\"form-group row\">\r\n                        <label for=\"email\" class=\"col-sm-3 col-form-label\">Correo</label>\r\n                        <section class=\"col-sm-9\">\r\n                            <input class=\"form-control\" type=\"email\" formControlName=\"Email\" id=\"email\">\r\n                            <!-- estilo para input error is-invalid -->\r\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && loginForm.get('Email').errors\">\r\n                                {{getErrorMessage('Email')}}\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n                    <section class=\"form-group row\">\r\n                        <label for=\"password\" class=\"col-sm-3 col-form-label\">Contraseña</label>\r\n                        <section class=\"col-sm-9\">\r\n                            <input class=\"form-control\" type=\"password\" formControlName=\"Password\" id=\"password\">\r\n                            <!-- estilo para input error is-invalid -->\r\n                            <div class=\"invalid-feedback text-left\" *ngIf=\"submitted && loginForm.get('Password').errors\">\r\n                                {{getErrorMessage('Password')}}\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n                    <section class=\"d-flex justify-content-center mb-3\">\r\n                        <a>¿Aún no tienes una cuenta?&nbsp;</a>\r\n                        <a class=\"register-a\" (click)=\"goToRegister()\">Regístrate</a>\r\n                    </section>\r\n                    <section class=\"d-flex justify-content-center\">\r\n                        <button type=\"submit\" (click)=\"login()\" class=\"btn btn-primary\">Ingresar</button>\r\n                    </section>\r\n                </section>\r\n            </form>\r\n        </section>\r\n    </section>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nconst routes: Routes = [{ path: '', component: LoginComponent }];\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { MenuOptionsModel } from './menuOptions.model';\r\n\r\nexport class LoginModel {\r\n  Password: string;\r\n  Email: string;\r\n  NewPassword: string;\r\n  MenuOptions: [MenuOptionsModel];\r\n  constructor() {\r\n    this.Password = '';\r\n    this.Email = '';\r\n    this.NewPassword = \"\";\r\n    this.MenuOptions = null;\r\n  }\r\n}\r\n"]}